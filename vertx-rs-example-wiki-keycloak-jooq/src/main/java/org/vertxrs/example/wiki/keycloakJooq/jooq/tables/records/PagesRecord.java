/*
 * This file is generated by jOOQ.
*/
package org.vertxrs.example.wiki.keycloakJooq.jooq.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;
import org.vertxrs.example.wiki.keycloakJooq.jooq.tables.Pages;
import org.vertxrs.example.wiki.keycloakJooq.jooq.tables.interfaces.IPages;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PagesRecord extends UpdatableRecordImpl<PagesRecord> implements Record3<Integer, String, String>, IPages {

    private static final long serialVersionUID = -749352138;

    /**
     * Setter for <code>public.pages.id</code>.
     */
    @Override
    public PagesRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.pages.id</code>.
     */
    @Override
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.pages.name</code>.
     */
    @Override
    public PagesRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.pages.name</code>.
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.pages.content</code>.
     */
    @Override
    public PagesRecord setContent(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.pages.content</code>.
     */
    @Override
    public String getContent() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Pages.PAGES.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Pages.PAGES.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Pages.PAGES.CONTENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getContent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PagesRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PagesRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PagesRecord value3(String value) {
        setContent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PagesRecord values(Integer value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IPages from) {
        setId(from.getId());
        setName(from.getName());
        setContent(from.getContent());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IPages> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PagesRecord
     */
    public PagesRecord() {
        super(Pages.PAGES);
    }

    /**
     * Create a detached, initialised PagesRecord
     */
    public PagesRecord(Integer id, String name, String content) {
        super(Pages.PAGES);

        set(0, id);
        set(1, name);
        set(2, content);
    }
}
